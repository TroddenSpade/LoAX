{"version":3,"file":"takeSnapshotAsync.js","sourceRoot":"","sources":["../src/takeSnapshotAsync.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAapD,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,iBAAiB,CAC7C,IAAkE,EAClE,OAAyB;IAEzB,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;QACjE,kBAAkB;QAClB,6DAA6D;QAC7D,OAAO,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC1C;IAED,6DAA6D;IAC7D,OAAO,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnC,CAAC","sourcesContent":["import * as React from 'react';\nimport { captureRef } from 'react-native-view-shot';\n\ntype ReactNativeNodeHandle = number;\n\ntype SnapshotOptions = {\n  width?: number;\n  height?: number;\n  format: 'png' | 'jpg' | 'raw' | 'webm';\n  quality: number;\n  snapshotContentContainer: boolean;\n  result: 'tmpfile' | 'base64' | 'data-uri' | 'zip-base64';\n};\n\nexport default async function takeSnapshotAsync<T>(\n  node: ReactNativeNodeHandle | React.Component | React.RefObject<T>,\n  options?: SnapshotOptions\n): Promise<string> {\n  if (typeof node === 'object' && 'current' in node && node.current) {\n    // React.RefObject\n    // @ts-ignore: captureRef's type doesn't include node handles\n    return captureRef(node.current, options);\n  }\n\n  // @ts-ignore: captureRef's type doesn't include node handles\n  return captureRef(node, options);\n}\n"]}