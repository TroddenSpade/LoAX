{"version":3,"file":"Updates.js","sourceRoot":"","sources":["../../src/Updates/Updates.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from 'expo-errors';\nimport { EventEmitter, EventSubscription } from 'fbemitter';\nimport { DeviceEventEmitter } from 'react-native';\n\nimport ExponentUpdates from './ExponentUpdates';\n\nexport async function reload(): Promise<void> {\n  await ExponentUpdates.reload();\n}\n\nexport async function reloadFromCache(): Promise<void> {\n  await ExponentUpdates.reloadFromCache();\n}\n\nexport async function checkForUpdateAsync(): Promise<Object> {\n  if (!ExponentUpdates.checkForUpdateAsync) {\n    throw new UnavailabilityError('Updates', 'checkForUpdateAsync');\n  }\n  const result = await ExponentUpdates.checkForUpdateAsync();\n  let returnObj: any = {\n    isAvailable: !!result,\n  };\n  if (result) {\n    returnObj.manifest = typeof result === 'string' ? JSON.parse(result) : result;\n  }\n  return returnObj;\n}\n\nexport async function fetchUpdateAsync({ eventListener }: any = {}): Promise<Object> {\n  if (!ExponentUpdates.fetchUpdateAsync) {\n    throw new UnavailabilityError('Updates', 'fetchUpdateAsync');\n  }\n  let subscription;\n  let result;\n  if (eventListener && typeof eventListener === 'function') {\n    subscription = addListener(eventListener);\n  }\n  try {\n    result = await ExponentUpdates.fetchUpdateAsync();\n  } finally {\n    subscription && subscription.remove();\n  }\n  let returnObj: any = {\n    isNew: !!result,\n  };\n  if (result) {\n    returnObj.manifest = typeof result === 'string' ? JSON.parse(result) : result;\n  }\n  return returnObj;\n}\n\nlet _emitter: EventEmitter | null;\n\nfunction _getEmitter(): EventEmitter {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    DeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent', _emitEvent);\n  }\n  return _emitter;\n}\n\nfunction _emitEvent(params): void {\n  let newParams = params;\n  if (typeof params === 'string') {\n    newParams = JSON.parse(params);\n  }\n  if (newParams.manifestString) {\n    newParams.manifest = JSON.parse(newParams.manifestString);\n    delete newParams.manifestString;\n  }\n\n  if (!_emitter) {\n    throw new Error(`EventEmitter must be initialized to use from its listener`);\n  }\n  _emitter.emit('Exponent.updatesEvent', newParams);\n}\n\nexport function addListener(listener: Function): EventSubscription {\n  let emitter = _getEmitter();\n  return emitter.addListener('Exponent.updatesEvent', listener);\n}\n\nexport const EventType = {\n  DOWNLOAD_STARTED: 'downloadStart',\n  DOWNLOAD_PROGRESS: 'downloadProgress',\n  DOWNLOAD_FINISHED: 'downloadFinished',\n  NO_UPDATE_AVAILABLE: 'noUpdateAvailable',\n  ERROR: 'error',\n};\n"]}