{"version":3,"file":"Calendar.js","sourceRoot":"","sources":["../src/Calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { NativeModules, Platform, processColor } from 'react-native';\n\ntype RecurringEventOptions = {\n  futureEvents?: boolean,\n  instanceStartDate?: string,\n}; // iOS\n\ntype Calendar = {\n  id?: string,\n  title?: string,\n  sourceId?: string, // iOS\n  source?: Source,\n  type?: string, // iOS\n  color?: string,\n  entityType?: string, // iOS\n  allowsModifications?: boolean,\n  allowedAvailabilities?: string[],\n  isPrimary?: boolean, // Android\n  name?: string, // Android\n  ownerAccount?: string, // Android\n  timeZone?: string, // Android\n  allowedReminders?: string[], // Android\n  allowedAttendeeTypes?: string[], // Android\n  isVisible?: boolean, // Android\n  isSynced?: boolean, // Android\n  accessLevel?: string, // Android\n};\n\ntype Source = {\n  id?: string, // iOS only ??\n  type?: string,\n  name?: string,\n  isLocalAccount?: boolean, // Android\n};\n\ntype Event = {\n  id?: string,\n  calendarId?: string,\n  title?: string,\n  location?: string,\n  creationDate?: string, // iOS\n  lastModifiedDate?: string, // iOS\n  timeZone?: string,\n  endTimeZone?: string, // Android\n  url?: string, // iOS\n  notes?: string,\n  alarms?: Alarm[],\n  recurrenceRule?: RecurrenceRule,\n  startDate?: string,\n  endDate?: string,\n  originalStartDate?: string, // iOS\n  isDetached?: boolean, // iOS\n  allDay?: boolean,\n  availability?: string, // Availability\n  status?: string, // Status\n  organizer?: string, // Organizer - iOS\n  organizerEmail?: string, // Android\n  accessLevel?: string, // Android,\n  guestsCanModify?: boolean, // Android,\n  guestsCanInviteOthers?: boolean, // Android\n  guestsCanSeeGuests?: boolean, // Android\n  originalId?: string, // Android\n  instanceId?: string, // Android\n};\n\ntype Reminder = {\n  id?: string,\n  calendarId?: string,\n  title?: string,\n  location?: string,\n  creationDate?: string,\n  lastModifiedDate?: string,\n  timeZone?: string,\n  url?: string,\n  notes?: string,\n  alarms?: Alarm[],\n  recurrenceRule?: RecurrenceRule,\n  startDate?: string,\n  dueDate?: string,\n  completed?: boolean,\n  completionDate?: string,\n};\n\ntype Attendee = {\n  id?: string, // Android\n  isCurrentUser?: boolean, // iOS\n  name?: string,\n  role?: string,\n  status?: string,\n  type?: string,\n  url?: string, // iOS\n  email?: string, // Android\n};\n\ntype Alarm = {\n  absoluteDate?: string, // iOS\n  relativeOffset?: string,\n  structuredLocation?: {\n    // iOS\n    title?: string,\n    proximity?: string, // Proximity\n    radius?: number,\n    coords?: {\n      latitude?: number,\n      longitude?: number,\n    },\n  },\n  method?: string, // Method, Android\n};\n\ntype RecurrenceRule = {\n  frequency: string, // Frequency\n  interval?: number,\n  endDate?: string,\n  occurrence?: number,\n};\n\nexport async function getCalendarsAsync(entityType?: string): Promise<void> {\n  if (!entityType) {\n    return NativeModules.ExponentCalendar.getCalendarsAsync(null);\n  }\n  return NativeModules.ExponentCalendar.getCalendarsAsync(entityType);\n}\n\nexport async function createCalendarAsync(details: Calendar = {}): Promise<string> {\n  let color = details.color ? processColor(details.color) : undefined;\n  const newDetails = { ...details, id: undefined, color };\n  return NativeModules.ExponentCalendar.saveCalendarAsync(newDetails);\n}\n\nexport async function updateCalendarAsync(id: string, details: Calendar = {}): Promise<string> {\n  if (!id) {\n    throw new Error(\n      'updateCalendarAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  let color = details.color ? processColor(details.color) : undefined;\n\n  if (Platform.OS === 'android') {\n    if (\n      details.hasOwnProperty('source') ||\n      details.hasOwnProperty('color') ||\n      details.hasOwnProperty('allowsModifications') ||\n      details.hasOwnProperty('allowedAvailabilities') ||\n      details.hasOwnProperty('isPrimary') ||\n      details.hasOwnProperty('ownerAccount') ||\n      details.hasOwnProperty('timeZone') ||\n      details.hasOwnProperty('allowedReminders') ||\n      details.hasOwnProperty('allowedAttendeeTypes') ||\n      details.hasOwnProperty('accessLevel')\n    ) {\n      console.warn(\n        'updateCalendarAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  } else {\n    if (\n      details.hasOwnProperty('source') ||\n      details.hasOwnProperty('type') ||\n      details.hasOwnProperty('entityType') ||\n      details.hasOwnProperty('allowsModifications') ||\n      details.hasOwnProperty('allowedAvailabilities')\n    ) {\n      console.warn(\n        'updateCalendarAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  }\n\n  const newDetails = { ...details, id, color };\n  return NativeModules.ExponentCalendar.saveCalendarAsync(newDetails);\n}\n\nexport async function deleteCalendarAsync(id: string): Promise<void> {\n  if (!id) {\n    throw new Error(\n      'deleteCalendarAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  return NativeModules.ExponentCalendar.deleteCalendarAsync(id);\n}\n\nexport async function getEventsAsync(\n  calendarIds: string[],\n  startDate: Date,\n  endDate: Date\n): Promise<Event[]> {\n  if (!startDate) {\n    throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n  }\n  if (!endDate) {\n    throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n  }\n  if (!calendarIds || !calendarIds.length) {\n    throw new Error(\n      'getEventsAsync must be called with a non-empty array of calendarIds to search'\n    );\n  }\n  return NativeModules.ExponentCalendar.getEventsAsync(startDate, endDate, calendarIds);\n}\n\nexport async function getEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<Event> {\n  if (!id) {\n    throw new Error('getEventAsync must be called with an id (string) of the target event');\n  }\n  if (Platform.OS === 'ios') {\n    return NativeModules.ExponentCalendar.getEventByIdAsync(id, instanceStartDate);\n  } else {\n    return NativeModules.ExponentCalendar.getEventByIdAsync(id);\n  }\n}\n\nexport async function createEventAsync(calendarId: string, details: Event = {}): Promise<string> {\n  if (!calendarId) {\n    throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n  }\n\n  if (Platform.OS === 'android') {\n    if (!details.startDate) {\n      throw new Error('createEventAsync requires a startDate (Date)');\n    }\n    if (!details.endDate) {\n      throw new Error('createEventAsync requires an endDate (Date)');\n    }\n    if (!details.timeZone) {\n      throw new Error('createEventAsync requires a timeZone (string)');\n    }\n  }\n\n  const newDetails = {\n    ...details,\n    id: undefined,\n    calendarId: calendarId === DEFAULT ? undefined : calendarId,\n  };\n  return NativeModules.ExponentCalendar.saveEventAsync(newDetails, {});\n}\n\nexport async function updateEventAsync(\n  id: string,\n  details: Event = {},\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<string> {\n  if (!id) {\n    throw new Error('updateEventAsync must be called with an id (string) of the target event');\n  }\n\n  if (Platform.OS === 'ios') {\n    if (\n      details.hasOwnProperty('creationDate') ||\n      details.hasOwnProperty('lastModifiedDate') ||\n      details.hasOwnProperty('originalStartDate') ||\n      details.hasOwnProperty('isDetached') ||\n      details.hasOwnProperty('status') ||\n      details.hasOwnProperty('organizer')\n    ) {\n      console.warn(\n        'updateEventAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  }\n\n  const newDetails = { ...details, id, instanceStartDate };\n  return NativeModules.ExponentCalendar.saveEventAsync(newDetails, { futureEvents });\n}\n\nexport async function deleteEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<void> {\n  if (!id) {\n    throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.deleteEventAsync(\n    { id, instanceStartDate },\n    { futureEvents }\n  );\n}\n\nexport async function getAttendeesForEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<Attendee[]> {\n  if (!id) {\n    throw new Error(\n      'getAttendeesForEventAsync must be called with an id (string) of the target event'\n    );\n  }\n  // Android only takes an ID, iOS takes an object\n  const params = Platform.OS === 'ios' ? { id, instanceStartDate } : id;\n  return NativeModules.ExponentCalendar.getAttendeesForEventAsync(params);\n}\n\nexport async function createAttendeeAsync(\n  eventId: string,\n  details: Attendee = {}\n): Promise<string> {\n  if (Platform.OS === 'ios') {\n    throw new Error('createAttendeeAsync is not available on iOS');\n  }\n  if (!eventId) {\n    throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n  }\n  if (!details.email) {\n    throw new Error('createAttendeeAsync requires an email (string)');\n  }\n  if (!details.role) {\n    throw new Error('createAttendeeAsync requires a role (string)');\n  }\n  if (!details.type) {\n    throw new Error('createAttendeeAsync requires a type (string)');\n  }\n  if (!details.status) {\n    throw new Error('createAttendeeAsync requires a status (string)');\n  }\n  const newDetails = { ...details, id: undefined };\n  return NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, eventId);\n} // Android\n\nexport async function updateAttendeeAsync(id: string, details: Attendee = {}): Promise<string> {\n  if (Platform.OS === 'ios') {\n    throw new Error('updateAttendeeAsync is not available on iOS');\n  }\n  if (!id) {\n    throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n  }\n  const newDetails = { ...details, id };\n  return NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, null);\n} // Android\n\nexport async function deleteAttendeeAsync(id: string): Promise<void> {\n  if (Platform.OS === 'ios') {\n    throw new Error('deleteAttendeeAsync is not available on iOS');\n  }\n  if (!id) {\n    throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.deleteAttendeeAsync(id);\n} // Android\n\nexport async function getRemindersAsync(\n  calendarIds: string[],\n  status: string | null,\n  startDate: Date,\n  endDate: Date\n): Promise<Reminder[]> {\n  if (Platform.OS === 'android') {\n    throw new Error('getRemindersAsync is not available on Android');\n  }\n  if (status && !startDate) {\n    throw new Error(\n      'getRemindersAsync must be called with a startDate (date) to search for reminders'\n    );\n  }\n  if (status && !endDate) {\n    throw new Error(\n      'getRemindersAsync must be called with an endDate (date) to search for reminders'\n    );\n  }\n  if (!calendarIds || !calendarIds.length) {\n    throw new Error(\n      'getRemindersAsync must be called with a non-empty array of calendarIds to search'\n    );\n  }\n  return NativeModules.ExponentCalendar.getRemindersAsync(\n    startDate || null,\n    endDate || null,\n    calendarIds,\n    status || null\n  );\n} // iOS\n\nexport async function getReminderAsync(id: string): Promise<Reminder> {\n  if (Platform.OS === 'android') {\n    throw new Error('getReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n  }\n  return NativeModules.ExponentCalendar.getReminderByIdAsync(id);\n} // iOS\n\nexport async function createReminderAsync(\n  calendarId: string,\n  details: Reminder = {}\n): Promise<string> {\n  if (Platform.OS === 'android') {\n    throw new Error('createReminderAsync is not available on Android');\n  }\n  if (!calendarId) {\n    throw new Error(\n      'createReminderAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  const newDetails = {\n    ...details,\n    id: undefined,\n    calendarId: calendarId === DEFAULT ? undefined : calendarId,\n  };\n  return NativeModules.ExponentCalendar.saveReminderAsync(newDetails);\n} // iOS\n\nexport async function updateReminderAsync(id: string, details: Reminder = {}): Promise<string> {\n  if (Platform.OS === 'android') {\n    throw new Error('updateReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error(\n      'updateReminderAsync must be called with an id (string) of the target reminder'\n    );\n  }\n\n  if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n    console.warn(\n      'updateReminderAsync was called with one or more read-only properties, which will not be updated'\n    );\n  }\n\n  const newDetails = { ...details, id };\n  return NativeModules.ExponentCalendar.saveReminderAsync(newDetails);\n} // iOS\n\nexport async function deleteReminderAsync(id: string): Promise<void> {\n  if (Platform.OS === 'android') {\n    throw new Error('deleteReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error(\n      'deleteReminderAsync must be called with an id (string) of the target reminder'\n    );\n  }\n  return NativeModules.ExponentCalendar.deleteReminderAsync(id);\n} // iOS\n\nexport async function getSourcesAsync(): Promise<Source[]> {\n  if (Platform.OS === 'android') {\n    throw new Error('getSourcesAsync is not available on Android');\n  }\n  return NativeModules.ExponentCalendar.getSourcesAsync();\n} // iOS\n\nexport async function getSourceAsync(id: string): Promise<Source> {\n  if (Platform.OS === 'android') {\n    throw new Error('getSourceAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error('getSourceAsync must be called with an id (string) of the target source');\n  }\n  return NativeModules.ExponentCalendar.getSourceByIdAsync(id);\n} // iOS\n\nexport function openEventInCalendar(id: string): void {\n  if (Platform.OS === 'ios') {\n    console.warn('openEventInCalendar is not available on iOS');\n    return;\n  }\n  if (!id) {\n    throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.openEventInCalendar(parseInt(id, 10));\n} // Android\n\nexport const EntityTypes = {\n  EVENT: 'event',\n  REMINDER: 'reminder',\n};\n\nexport const Frequency = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  YEARLY: 'yearly',\n};\n\nexport const Availability = {\n  NOT_SUPPORTED: 'notSupported', // iOS\n  BUSY: 'busy',\n  FREE: 'free',\n  TENTATIVE: 'tentative',\n  UNAVAILABLE: 'unavailable', // iOS\n};\n\nexport const CalendarType = {\n  LOCAL: 'local',\n  CALDAV: 'caldav',\n  EXCHANGE: 'exchange',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays',\n}; // iOS\n\nexport const EventStatus = {\n  NONE: 'none',\n  CONFIRMED: 'confirmed',\n  TENTATIVE: 'tentative',\n  CANCELED: 'canceled',\n};\n\nexport const SourceType = {\n  LOCAL: 'local',\n  EXCHANGE: 'exchange',\n  CALDAV: 'caldav',\n  MOBILEME: 'mobileme',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays',\n};\n\nexport const AttendeeRole = {\n  UNKNOWN: 'unknown', // iOS\n  REQUIRED: 'required', // iOS\n  OPTIONAL: 'optional', // iOS\n  CHAIR: 'chair', // iOS\n  NON_PARTICIPANT: 'nonParticipant', // iOS\n  ATTENDEE: 'attendee', // Android\n  ORGANIZER: 'organizer', // Android\n  PERFORMER: 'performer', // Android\n  SPEAKER: 'speaker', // Android\n  NONE: 'none', // Android\n};\n\nexport const AttendeeStatus = {\n  UNKNOWN: 'unknown', // iOS\n  PENDING: 'pending', // iOS\n  ACCEPTED: 'accepted',\n  DECLINED: 'declined',\n  TENTATIVE: 'tentative',\n  DELEGATED: 'delegated', // iOS\n  COMPLETED: 'completed', // iOS\n  IN_PROCESS: 'inProcess', // iOS\n  INVITED: 'invited', // Android\n  NONE: 'none', // Android\n};\n\nexport const AttendeeType = {\n  UNKNOWN: 'unknown', // iOS\n  PERSON: 'person', // iOS\n  ROOM: 'room', // iOS\n  GROUP: 'group', // iOS\n  RESOURCE: 'resource',\n  OPTIONAL: 'optional', // Android\n  REQUIRED: 'required', // Android\n  NONE: 'none', // Android\n};\n\nexport const AlarmMethod = {\n  ALARM: 'alarm',\n  ALERT: 'alert',\n  EMAIL: 'email',\n  SMS: 'sms',\n  DEFAULT: 'default',\n};\n\nexport const EventAccessLevel = {\n  CONFIDENTIAL: 'confidential',\n  PRIVATE: 'private',\n  PUBLIC: 'public',\n  DEFAULT: 'default',\n};\n\nexport const CalendarAccessLevel = {\n  CONTRIBUTOR: 'contributor',\n  EDITOR: 'editor',\n  FREEBUSY: 'freebusy',\n  OVERRIDE: 'override',\n  OWNER: 'owner',\n  READ: 'read',\n  RESPOND: 'respond',\n  ROOT: 'root',\n  NONE: 'none',\n};\n\nexport const ReminderStatus = {\n  COMPLETED: 'completed',\n  INCOMPLETE: 'incomplete',\n};\n\nexport const DEFAULT = 'default';\n"]}