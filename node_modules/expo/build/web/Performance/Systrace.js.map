{"version":3,"file":"Systrace.js","sourceRoot":"","sources":["../../../src/web/Performance/Systrace.ts"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'invariant';\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst TRACE_TAG_REACT_APPS = 1 << 17; // eslint-disable-line no-bitwise\nconst TRACE_TAG_JS_VM_CALLS = 1 << 27; // eslint-disable-line no-bitwise\n\nlet _enabled = false;\nlet _asyncCookie = 0;\nconst _markStack: any = [];\nlet _markStackIndex = -1;\nlet _canInstallReactHook = false;\n\n// Implements a subset of User Timing API necessary for React measurements.\n// https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\nconst REACT_MARKER = '\\u269B';\nconst userTimingPolyfill = __DEV__\n  ? {\n      mark(markName: string) {\n        if (_enabled) {\n          _markStackIndex++;\n          _markStack[_markStackIndex] = markName;\n          let systraceLabel = markName;\n          // Since perf measurements are a shared namespace in User Timing API,\n          // we prefix all React results with a React emoji.\n          if (markName[0] === REACT_MARKER) {\n            // This is coming from React.\n            // Removing component IDs keeps trace colors stable.\n            const indexOfId = markName.lastIndexOf(' (#');\n            const cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;\n            // Also cut off the emoji because it breaks Systrace\n            systraceLabel = markName.slice(2, cutoffIndex);\n          }\n          Systrace.beginEvent(systraceLabel);\n        }\n      },\n      measure(measureName: string, startMark?: string, endMark?: string) {\n        if (_enabled) {\n          invariant(\n            typeof measureName === 'string' &&\n              typeof startMark === 'string' &&\n              typeof endMark === 'undefined',\n            'Only performance.measure(string, string) overload is supported.'\n          );\n          const topMark = _markStack[_markStackIndex];\n          invariant(\n            startMark === topMark,\n            'There was a mismatching performance.measure() call. ' + 'Expected \"%s\" but got \"%s.\"',\n            topMark,\n            startMark\n          );\n          _markStackIndex--;\n          // We can't use more descriptive measureName because Systrace doesn't\n          // let us edit labels post factum.\n          Systrace.endEvent();\n        }\n      },\n      clearMarks(markName: string) {\n        if (_enabled) {\n          if (_markStackIndex === -1) {\n            return;\n          }\n          if (markName === _markStack[_markStackIndex]) {\n            // React uses this for \"cancelling\" started measurements.\n            // Systrace doesn't support deleting measurements, so we just stop them.\n            if (userTimingPolyfill != null) {\n              userTimingPolyfill.measure(markName, markName);\n            }\n          }\n        }\n      },\n      clearMeasures() {\n        // React calls this to avoid memory leaks in browsers, but we don't keep\n        // measurements anyway.\n      },\n    }\n  : null;\n\nconst Systrace = {\n  installReactHook() {\n    if (_enabled) {\n      if (__DEV__) {\n        global.performance = userTimingPolyfill;\n      }\n    }\n    _canInstallReactHook = true;\n  },\n\n  setEnabled(enabled: boolean) {\n    if (_enabled !== enabled) {\n      if (__DEV__) {\n        if (enabled) {\n          global.nativeTraceBeginLegacy && global.nativeTraceBeginLegacy(TRACE_TAG_JS_VM_CALLS);\n        } else {\n          global.nativeTraceEndLegacy && global.nativeTraceEndLegacy(TRACE_TAG_JS_VM_CALLS);\n        }\n        if (_canInstallReactHook) {\n          if (enabled && global.performance === undefined) {\n            global.performance = userTimingPolyfill;\n          }\n        }\n      }\n      _enabled = enabled;\n    }\n  },\n\n  isEnabled(): boolean {\n    return _enabled;\n  },\n\n  /**\n   * beginEvent/endEvent for starting and then ending a profile within the same call stack frame\n   **/\n  beginEvent(profileName?: any, args?: any) {\n    if (_enabled) {\n      profileName = typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);\n    }\n  },\n\n  endEvent() {\n    if (_enabled) {\n      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);\n    }\n  },\n\n  /**\n   * beginAsyncEvent/endAsyncEvent for starting and then ending a profile where the end can either\n   * occur on another thread or out of the current stack frame, eg await\n   * the returned cookie variable should be used as input into the endAsyncEvent call to end the profile\n   **/\n  beginAsyncEvent(profileName?: any): any {\n    const cookie = _asyncCookie;\n    if (_enabled) {\n      _asyncCookie++;\n      profileName = typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie);\n    }\n    return cookie;\n  },\n\n  endAsyncEvent(profileName?: any, cookie?: any) {\n    if (_enabled) {\n      profileName = typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie);\n    }\n  },\n\n  /**\n   * counterEvent registers the value to the profileName on the systrace timeline\n   **/\n  counterEvent(profileName?: any, value?: any) {\n    if (_enabled) {\n      profileName = typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceCounter &&\n        global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);\n    }\n  },\n};\n\nexport default Systrace;\n"]}