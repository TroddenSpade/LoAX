{"version":3,"file":"Fingerprint.js","sourceRoot":"","sources":["../src/Fingerprint.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,WAAW,CAAC;AAClC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAEvD,MAAM,EAAE,mBAAmB,EAAE,GAAG,aAAa,CAAC;AAI9C,MAAM,UAAU,gBAAgB;IAC9B,OAAO,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;AAChD,CAAC;AAED,MAAM,UAAU,eAAe;IAC7B,OAAO,mBAAmB,CAAC,eAAe,EAAE,CAAC;AAC/C,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,mBAA2B,cAAc;IAEzC,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;QACzB,SAAS,CACP,OAAO,gBAAgB,KAAK,QAAQ,IAAI,gBAAgB,CAAC,MAAM,EAC/D,6EAA6E,CAC9E,CAAC;QACF,OAAO,mBAAmB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;KAChE;SAAM;QACL,OAAO,mBAAmB,CAAC,iBAAiB,EAAE,CAAC;KAChD;AACH,CAAC;AAED,MAAM,UAAU,kBAAkB;IAChC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;AAC3C,CAAC","sourcesContent":["import invariant from 'invariant';\nimport { NativeModules, Platform } from 'react-native';\n\nconst { ExponentFingerprint } = NativeModules;\n\ntype FingerprintAuthenticationResult = { success: true } | { success: false, error: string };\n\nexport function hasHardwareAsync(): Promise<boolean> {\n  return ExponentFingerprint.hasHardwareAsync();\n}\n\nexport function isEnrolledAsync(): Promise<boolean> {\n  return ExponentFingerprint.isEnrolledAsync();\n}\n\nexport function authenticateAsync(\n  promptMessageIOS: string = 'Authenticate'\n): Promise<FingerprintAuthenticationResult> {\n  if (Platform.OS === 'ios') {\n    invariant(\n      typeof promptMessageIOS === 'string' && promptMessageIOS.length,\n      'Fingerprint.authenticateAsync must be called with a non-empty string on iOS'\n    );\n    return ExponentFingerprint.authenticateAsync(promptMessageIOS);\n  } else {\n    return ExponentFingerprint.authenticateAsync();\n  }\n}\n\nexport function cancelAuthenticate(): void {\n  ExponentFingerprint.cancelAuthenticate();\n}\n"]}