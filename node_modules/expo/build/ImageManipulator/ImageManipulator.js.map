{"version":3,"file":"ImageManipulator.js","sourceRoot":"","sources":["../../src/ImageManipulator/ImageManipulator.ts"],"names":[],"mappings":"AAAA,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AA6BlD,MAAM,CAAC,KAAK,UAAU,eAAe,CACnC,GAAW,EACX,UAAsC,EAAE,EACxC,cAA2B,EAAE;IAE7B,IAAI,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,EAAE;QAC9B,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAC;KAC5D;IACD,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE;QACxC,MAAM,IAAI,mBAAmB,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;KACtE;IACD,OAAO,MAAM,wBAAwB,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;AAC9E,CAAC","sourcesContent":["import ExponentImageManipulator from './ExponentImageManipulator';\nimport { UnavailabilityError } from 'expo-errors';\n\ntype ImageResult = {\n  uri: string;\n  width: number;\n  height: number;\n  base64?: string;\n};\n\ntype CropParameters = {\n  originX: number;\n  originY: number;\n  width: number;\n  height: number;\n};\n\ntype ImageManipulationActions = {\n  resize?: { width?: number; height?: number };\n  rotate?: number;\n  flip?: { vertical?: boolean; horizontal?: boolean };\n  crop?: CropParameters;\n};\n\ntype SaveOptions = {\n  base64?: boolean;\n  compress?: number;\n  format?: 'jpeg' | 'png';\n};\n\nexport async function manipulateAsync(\n  uri: string,\n  actions: ImageManipulationActions[] = [],\n  saveOptions: SaveOptions = {}\n): Promise<ImageResult> {\n  if (!(typeof uri === 'string')) {\n    throw new TypeError(`The \"uri\" argument must be a string`);\n  }\n  if (!ExponentImageManipulator.manipulate) {\n    throw new UnavailabilityError('ImageManipulator', 'manipulateAsync');\n  }\n  return await ExponentImageManipulator.manipulate(uri, actions, saveOptions);\n}\n"]}