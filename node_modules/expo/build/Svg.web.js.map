{"version":3,"file":"Svg.web.js","sourceRoot":"","sources":["../src/Svg.web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,OAAO,CAAC;AAEtC,SAAS,QAAQ,CAAC,aAAa,EAAE,OAAO;IACtC,SAAS,UAAU,CAAC,KAAK;QACvB,OAAO,aAAa,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IACD,UAAU,CAAC,WAAW,GAAG,aAAa,CAAC;IACvC,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,MAAM,KAAK,GAAG;IACZ,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,UAAU;IACpB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,CAAC,EAAE,GAAG;IACN,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;IACZ,cAAc,EAAE,gBAAgB;IAChC,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,UAAU;IACpB,cAAc,EAAE,gBAAgB;IAChC,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,OAAO;IACd,GAAG,EAAE,KAAK;CACX,CAAC;AAEF,MAAM,CAAC,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAE1C,KAAK,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IAC5D,GAAG,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;CACvD;AAED,MAAM,CAAC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AACrC,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AAC7B,MAAM,CAAC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AACnC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACvB,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AAC/B,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AAC7B,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC;AACjD,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AAC7B,MAAM,CAAC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AACrC,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC;AACjD,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AAC7B,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AAC7B,MAAM,CAAC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACjC,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AAC7B,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AACrC,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AAC/B,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AAE3B,eAAe,GAAG,CAAC","sourcesContent":["import { createElement } from 'react';\n\nfunction generate(componentName, tagName): any {\n  function SvgElement(props) {\n    return createElement(tagName, props, props.children);\n  }\n  SvgElement.displayName = componentName;\n  return SvgElement;\n}\n\nconst types = {\n  Circle: 'circle',\n  ClipPath: 'clipPath',\n  Defs: 'defs',\n  Ellipse: 'ellipse',\n  G: 'g',\n  Image: 'image',\n  Line: 'line',\n  LinearGradient: 'linearGradient',\n  Path: 'path',\n  Polygon: 'polygon',\n  Polyline: 'polyline',\n  RadialGradient: 'radialGradient',\n  Rect: 'rect',\n  Stop: 'stop',\n  Symbol: 'symbol',\n  Text: 'text',\n  TextPath: 'textPath',\n  TSpan: 'tspan',\n  Use: 'use',\n};\n\nexport const Svg = generate('Svg', 'svg');\n\nfor (const [componentName, tagName] of Object.entries(types)) {\n  Svg[componentName] = generate(componentName, tagName);\n}\n\nexport const Circle = Svg.Circle;\nexport const ClipPath = Svg.ClipPath;\nexport const Defs = Svg.Defs;\nexport const Ellipse = Svg.Ellipse;\nexport const G = Svg.G;\nexport const Image = Svg.Image;\nexport const Line = Svg.Line;\nexport const LinearGradient = Svg.LinearGradient;\nexport const Path = Svg.Path;\nexport const Polygon = Svg.Polygon;\nexport const Polyline = Svg.Polyline;\nexport const RadialGradient = Svg.RadialGradient;\nexport const Rect = Svg.Rect;\nexport const Stop = Svg.Stop;\nexport const Symbol = Svg.Symbol;\nexport const Text = Svg.Text;\nexport const TextPath = Svg.TextPath;\nexport const TSpan = Svg.TSpan;\nexport const Use = Svg.Use;\n\nexport default Svg;\n"]}