// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Nested navigators renders succesfully as direct child 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <PanGestureHandler
    enabled={false}
    hitSlop={
      Object {
        "right": 50,
      }
    }
    maxDeltaY={20}
    minOffsetX={5}
    onGestureEvent={[Function]}
    onHandlerStateChange={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <View
              onLayout={[Function]}
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <PanGestureHandler
                enabled={false}
                hitSlop={
                  Object {
                    "right": 50,
                  }
                }
                maxDeltaY={20}
                minOffsetX={5}
                onGestureEvent={[Function]}
                onHandlerStateChange={[Function]}
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#eee",
                      "flex": 1,
                      "flexDirection": "column-reverse",
                      "overflow": "hidden",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      pointerEvents="auto"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "paddingTop": 64,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                            Object {
                              "translateY": 0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        accessibilityElementsHidden={false}
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "flex": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    pointerEvents="box-none"
                    style={
                      Object {
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#FFF",
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={
                          Object {
                            "backgroundColor": "#FFF",
                            "borderBottomColor": "#A7A7AA",
                            "borderBottomWidth": 0.5,
                            "height": 64,
                            "paddingBottom": 0,
                            "paddingLeft": 0,
                            "paddingRight": 0,
                            "paddingTop": 20,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "bottom": 0,
                                "flexDirection": "row",
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "flexDirection": "row",
                                  "justifyContent": "center",
                                  "left": 0,
                                  "opacity": 1,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            >
                              <Text
                                accessibilityTraits="header"
                                accessible={false}
                                allowFontScaling={true}
                                numberOfLines={1}
                                onLayout={[Function]}
                                style={
                                  Object {
                                    "color": "rgba(0, 0, 0, .9)",
                                    "fontSize": 17,
                                    "fontWeight": "600",
                                    "marginHorizontal": 16,
                                    "textAlign": "center",
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </PanGestureHandler>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#FFF",
                "borderBottomColor": "#A7A7AA",
                "borderBottomWidth": 0.5,
                "height": 64,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    accessibilityTraits="header"
                    accessible={false}
                    allowFontScaling={true}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, .9)",
                        "fontSize": 17,
                        "fontWeight": "600",
                        "marginHorizontal": 16,
                        "textAlign": "center",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </PanGestureHandler>
</View>
`;

exports[`Nested navigators throw when trying to pass navigation prop 1`] = `"No \\"routes\\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop"`;
